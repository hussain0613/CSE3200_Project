@model CSE3200_Project.Models.Content

@{
    ViewBag.Title = "Contents - Create";
}

<h2>Create Content</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Content</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.details, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.details, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.alternative_url, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.alternative_url, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.alternative_url, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> typeItem = new List<SelectListItem> {
                        new SelectListItem(){
                            Text = "Text",
                            Value = "text",
                            Selected = true
                        },
                        new SelectListItem(){
                            Text = "Video",
                            Value = "video"
                        }
                        ,
                        new SelectListItem(){
                            Text = "Image",
                            Value = "image"
                        },
                        new SelectListItem(){
                            Text = "PDF",
                            Value = "pdf"
                        },
                        new SelectListItem(){
                            Text = "Audio",
                            Value = "audio"
                        },
                        new SelectListItem(){
                            Text = "Others",
                            Value = "others"
                        }
                    };
            }
            @Html.DropDownList("type", typeItem, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.privacy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItem = new List<SelectListItem> {
                        new SelectListItem(){
                            Text = "Private",
                            Value = "private",
                            Selected = true
                        },
                        new SelectListItem(){
                            Text = "Public",
                            Value = "public"
                        }
                    };
            }
            @Html.DropDownList("privacy", listItem, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.privacy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("shelves", "Put into shelves", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("shelves", new MultiSelectList(@ViewBag.shelves, "id", "title"), htmlAttributes: new { @class = "form-control", multiple = true })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
